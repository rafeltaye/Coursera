swirl()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res<-gather(students2, sex_class, count)
res<-gather(students2, sex_class, count,-grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread()
?spread
submit()
extract_numeric("class5")
submit()
library(swirl)
swirl()
swirl()
students4
submit()
submit()
submit()
passed
failed
passed<-passed%>% mutate(status="passed")
failed<-failed%>% mutate(status= "failed")
bind_rows(passed, failed)
sat
submit()
submit()
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package,country )
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package=="swirl")
filter(cran, r_version=="3.1.1", country=="US")
?Comparison
filter(cran, r_version<="3.0.2", country=="IN")
filter(cran, country=="US" | country=="IN")
filter(cran, size> 100500, r_os=="linux-gnu")
is.na(c(3,5,NA, 10))
!is.na(c(3,5,NA, 10))
filter(cran, !is.na(r_version))
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2,package, ip_id)
arrange(cran2,country, desc(r_version), ip_id )
select(cran,ip_id, package, size )
cran3<-select(cran,ip_id, package, size )
cran3
mutate(cran3, size_mb=size/ 2^20)
mutate(cran3, size_mb=size/ 2^20, size_gb=size_mb/2^10)
mutate(cran3, correct_size=size+10^3)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
submit()
submit()
pack_sum
quantile(pack_sum$count, probs=0.99)
top_counts<-filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs=0.99)
top_unique<-filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted<-arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
rm(list=ls())
setwd("~/Coursera/Getting and Cleaning Data")
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv, "housing.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "housing.csv")
housing<-read.csv("housing.csv", header=TRUE, sep = ",")
housing<-tbl_df(housing)
agricultureLogical<-filter(housing, ACR>2, AGS==6)
which(agricultureLogical)
head(agricultureLogical)
agricultureLogical<-as.logical(housing, ACR>2, AGS==6)
agricultureLogical<-as.logical(housing$ACR>2, housing$AGS==6)
which(agricultureLogical)
library(jpeg)
jpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native=TRUE)
jpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
jpeg(filename = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
jpeg(filename = https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg)
jpeg(filename = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "GDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "EDU.csv")
GDP<-read.csv("GDP.csv", header=TRUE, sep = ",")
head(GDP)
GDP<-read.csv("GDP.csv", header=FALSE, sep = ",")
head(GDP)
setwd("~/Coursera/Getting and Cleaning Data/UCI HAR Dataset")
rm(list=ls())
read.table("train/X_train.txt", header=TRUE )
train<-read.table("train/X_train.txt", header=FALSE )
head(train)
Xtrain<-read.table("train/X_train.txt", header=FALSE )
activity_labels<-read.table("activity_labels.txt")
activity_labels
activity_lables<-as.factor(activity_labels$V2)
activity_lables
features<-read.table("features.txt")
head(features)
subject_train<-read.table("train/subject_train.txt", col.names=c("Subject"))
head(subject_train)
table(subject_train)
subject_test<-read.table("test/subject_test.txt", col.names = c("Subject"))
subject_test
table(subject_test)
table(subject_train)
subject_all<-rbind(subject_train, subject_test)
table(subject_all)
train<-read.table("train/X_train.txt")
test<-read.table("test/X_test.txt")
x_data<-rbind(train, test)
rm(list=ls())
